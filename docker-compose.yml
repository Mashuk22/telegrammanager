version: "3"
networks:
  tgm-network:
    external: true

services:
  ### Userservice
  userservice:
    build:
      context: ./userservice
      dockerfile: Dockerfile
    ports:
      - "7077:7077"
    environment:
      - DB_HOST=telegrammanager-postgres
      - DB_PORT=5432
      - DB_NAME=telegrammanager
      - DB_USER=postgres
      - DB_PASSWORD=mypassword
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - rabbitmq
      - logservice
      - apigateway
    restart: always

  postgres:
    image: postgres:latest
    ports:
      - "6543:5432"
    environment:
      - POSTGRES_DB=telegrammanager
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypassword
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  rabbitmq:
    image: rabbitmq:3.9-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  ### Logservice
  logservice:
    build:
      context: ./logservice
      dockerfile: Dockerfile
    environment:
      - SERVICE_NAME=log-service
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - kafka
      - elasticsearch

  elasticsearch:
    image: elasticsearch:8.14.1
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: kibana:8.14.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: always
    ports:
      - "8082:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    depends_on:
      - kafka
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  ## Apigateway
  apigateway:
    build: .
    scale: 3
    depends_on:
      - otel-collector
      - zipkin
    ports:
      - "7078:7078"

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4318:4318"
      - "8888:8888"

  ## Nginx
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - userservice
      - apigateway

volumes:
  postgres-data:
  rabbitmq-data:
  elasticsearch-data:
